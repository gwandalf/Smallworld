//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil
//     Les modifications apportées à ce fichier seront perdues si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Modele.Creation
{
	using Modele.Jeu;
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

    /// <remarks>
    /// Singleton
    /// </remarks>
    /// <summary>
    /// used to configurate the game (peoples, size of the map, number of turns, number of units by army)
    /// </summary>
    public sealed class GameInitiator : GameInitiatorI
	{
        public static GameInitiator INSTANCE = new GameInitiator();

        //builder : determines the type of the game (size of the map, number of rounds, ...)
        private MonteurPartieI monteurPartie;
		public MonteurPartieI MonteurPartie
		{
            get { return monteurPartie; }
            set { monteurPartie = value; }
		}

        //unit factories
        private List<FabriqueI> fabriquesUnite;
		public List<FabriqueI> FabriquesUnite
		{
            get { return fabriquesUnite; }
            set { fabriquesUnite = value; }
		}

        /// <summary>
        /// default constructor
        /// private : 
        /// </summary>
		private GameInitiator()
		{
		}

        /// <summary>
        /// creates the intern representation of the game
        /// delegates the work to its attributes : the game builder and unit factory
        /// </summary>
        /// <returns> representation of the game </returns>
		public PartieI creerPartie()
		{
            monteurPartie.FabriquesUnite = fabriquesUnite;
            List<JoueurI> joueurs = monteurPartie.makeJoueurs();
            CarteI carte = monteurPartie.makeCarte(joueurs);
            return new Partie(joueurs, monteurPartie.NbTours, carte);
		}

	}
}

